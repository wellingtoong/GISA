@using GISA.WebApp.MVC.Extensions
@using GISA.WebApi.Core.Usuario
@inject IAspNetUser AppUser
@model GISA.WebApp.MVC.Models.AgendaViewModel

@{
    ViewData["Title"] = "Minha Agenda";
    Layout = "_LayoutPrivate";
}

<!-- Título Page -->
<div class="header title-page" id="header-management">
    <h3 class="text-title-page">Agenda Pessoal</h3>
</div>

<!-- Informações sobre ações da página -->
<div class="row pt-75">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb text-breadcrumb">
                <li class="breadcrumb-item"><a asp-action="Apresentacao" asp-controller="Home">Início</a></li>
                <li class="breadcrumb-item active" aria-current="page">/ Minha agenda</li>
            </ol>
        </nav>
    </div>
</div>

<div class="container">
    <div class="row">
        <div id="agendaPessoal"></div>
    </div>

</div>


@section Scripts {
    <script>
        var agenda = {}

        agenda.eventos = {

            init: () => {

                agenda.template = {

                    card: `<div class="card mt-30">
                                <div class="card-body">
                                    <h5 class="card-title" style="color: #181c32;">Você tem uma consulta!</h5>
                                    <p class="card-text">{{Observacao}}</p>

                                    </br>
                                    <span class="badge bg-primary">{{Data}}</span>
                                    <span class="badge bg-primary">{{Hora}}</span>
                                </div>
                            </div>`
                }

                agenda.metodos.obterAgendamentosPessoa();
            }

        }

        agenda.metodos = {

            obterAgendamentosPessoa: () => {

                app.metodos.get(`/agenda/agendamentos/342b9972-06e3-472a-d201-08d9fafc46c6`,
                    (response) => {
                        var cards = [];
                        console.log(response);

                        if (response != null) {

                            response.forEach(function (item, index, arr) {

                                var data = app.metodos.formataDataBR(item.data);
                                var obs = (item.observacao != null) ? item.observacao : "N/A";

                                var card = agenda.template.card
                                    .replace("{{Data}}", data)
                                    .replace("{{Hora}}", item.hora)
                                    .replace("{{Observacao}}", obs)

                                cards.push(card);

                            });

                            $('#agendaPessoal').append(cards);
                        }

                    },
                    (xhr, ajaxOptions, error) => {
                        console.log('xhr', xhr);
                        console.log('ajaxOptions', ajaxOptions);
                        console.log('error', error);
                    }
                )

            }

        }

        agenda.eventos.init();
    </script>
}
