@model GISA.WebApp.MVC.Models.PessoaViewModel

@{
    ViewData["Title"] = "Edição";
    Layout = "_LayoutPrivate";
}

<!-- Título Page -->
<div class="header title-page" id="header-management">
    <h3 class="text-title-page">Edição de Pessoas</h3>
</div>

<!-- Informações sobre ações da página -->
<div class="row pt-75">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb text-breadcrumb">
                <li class="breadcrumb-item"><a asp-action="Apresentacao" asp-controller="Home">Início</a></li>
                <li class="breadcrumb-item"><a asp-action="Index">Pessoa</a></li>
                <li class="breadcrumb-item active" aria-current="page">/ Edição</li>
            </ol>
        </nav>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="pt-40 col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <form class="row g-3 needs-validation" novalidate asp-action="Atualizar" method="post">
                <vc:Summary></vc:Summary>

                <div class="bd-callout bd-callout-default">
                    <h4 class="text-title-info">Dados Pessoais</h4>
                    <hr />

                    <partial name="_Pessoa" />
                </div>


                <div class="accordion accordion-flush pd-0" id="accordionFlushExample">
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="flush-headingTwo">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseTwo" aria-expanded="false" aria-controls="flush-collapseTwo">
                                <h4 class="text-title-info">Endereço</h4>
                                <hr />
                            </button>
                        </h2>
                        <div id="flush-collapseTwo" class="accordion-collapse collapse" aria-labelledby="flush-headingTwo" data-bs-parent="#accordionFlushExample">
                            <div class="accordion-body">
                                <partial name="_Endereco" />
                            </div>
                        </div>
                    </div>
                </div>


                @{
                    if (Model.Ativo)
                    {
                        <partial name="_VinculoPlano" />
                    }
                }

                <div class="mb-3 col-sm-12 col-md-12 col-lg-12">
                    <br />

                    @{
                        if (Model.Ativo)
                        {
                            <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight">Adicionar Plano</button>
                        }
                    }

                    <a class="btn btn-secondary float-end ml-10" asp-action="Index">Voltar</a>
                    <button type="submit" class="btn btn-primary float-end">Salvar</button>
                </div>
            </form>

         
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var plano = {}

        plano.eventos = {

            init: () => {

                $('#Telefone').mask('(00) 0000-0000', { placeholder: "(  )    -    " });
                $('#DataNascimento').mask('00/00/0000', { placeholder: "__/__/____" });
                $('#Cpf').mask('000.000.000-00', { placeholder: "  .   .   - " });
                $('#Rg').mask('00.000.000-0', { placeholder: "  .   .   - " });
                $('#EnderecoViewModel_Cep').mask('00000-000', { placeholder: "     -   " });

                if ($("#Ativo").is(":checked") == true) {

                    console.log('entrou')

                    //$('#txtDesconto').mask('##0%', { reverse: true });
                    $('#txtNomeCompleto').val($('#NomeCompleto').val());
                    $('#txtTipoPessoa').val($('#TipoPessoaEnum option:selected').text());

                    $("#ddlPlano").change(function () {
                        var planos = app.metodos.getLocalStorage('plano');

                        console.log(planos)

                        var item = planos.filter(p => p.id == $(this).val());

                        $('#txtValorPlano').val(item[0].valor.toLocaleString('pt-br', { minimumFractionDigits: 2 }),);
                    });

                    // calculo porcentagem
                    $("#txtDesconto").blur(function () {
                        var valor = $('#txtValorPlano').val().replace(",", ".");
                        var porcentagem = $(this).val(); //.replace("%", "");

                        var vd = valor * (porcentagem / 100);
                        var vf = valor - vd;

                        var apresentacao = (vf < 0) ? "00,00" : vf.toLocaleString('pt-br', { minimumFractionDigits: 2 });
                        $("#txtValorFinal").val(apresentacao);
                    });

                    if ($('#Id').val() == '' && $('#Id').val() == null && $('#Id').val() == undefined) return;

                    //plano.metodos.obterPlanoPessoaPorIdPessoa($('#Id').val());
                }

                plano.metodos.obterPlanos();
                app.metodos.buscarCep();

                var validade = "@ViewBag.ValidateForm";
                app.metodos.initValidateForm(validade);
            }

        }

        plano.metodos = {

            obterPlanos: () => {

                app.metodos.get('/plano/obter-todos',
                    (response) => {
                        console.log('obterPlanos', response)

                        var planos = response.filter(p => p.ativo == true);

                        $.each(planos, function (i, d) {
                            $('<option>').val(d.id).text(d.nome).appendTo($('#ddlPlano'));
                        });

                        app.metodos.setLocalStorage('plano', planos);
                    },
                    (xhr, ajaxOptions, error) => {
                        console.log('xhr', xhr);
                        console.log('ajaxOptions', ajaxOptions);
                        console.log('error', error);
                    }
                )

            },

            //enviarPlanoPessoa: () => {

            //    var pessoaId = $('#Id').val();
            //    var planoId = $('#ddlPlano').val();
            //    var desconto = $('#txtDesconto').val().replace('%', '');
            //    var valorFinal = $('#txtValorFinal').val().replace(',', '.');

            //    var dado = {
            //        id: app.metodos.newGuid(),
            //        pessoaId: pessoaId,
            //        planoId: planoId,
            //        desconto: desconto,
            //        valorFinal: valorFinal
            //    }

            //    console.log("dado", dado);

            //    app.metodos.post('/plano-cliente/novo-plano', dado,
            //        (response) => {

            //            console.log('enviarPlanoPessoa', response)

            //        },
            //        (xhr, ajaxOptions, error) => {
            //            console.log('xhr', xhr);
            //            console.log('ajaxOptions', ajaxOptions);
            //            console.log('error', error);
            //        }

            //    )

            //},

            //obterPlanoPessoaPorIdPessoa: (idPessoa) => {

            //    app.metodos.get(`/plano-cliente/obter-plano/${idPessoa}`,
            //        (response) => {
            //            console.log('obterPlanoPessoaPorIdPessoa', response)

            //            if (response.id == null || response.id == "00000000-0000-0000-0000-000000000000") return;

            //            var total = response.valorFinal + response.desconto;

            //            $('#ddlPlano').val(response.planoId);
            //            $('#txtValorPlano').val(total.toLocaleString('pt-br', { minimumFractionDigits: 2 }));
            //            $('#txtDesconto').val(response.desconto);
            //            $('#txtValorFinal').val(response.valorFinal.toLocaleString('pt-br', { minimumFractionDigits: 2 }));
            //        },
            //        (xhr, ajaxOptions, error) => {
            //            console.log('xhr', xhr);
            //            console.log('ajaxOptions', ajaxOptions);
            //            console.log('error', error);
            //        }
            //    )

            //},

        }

        plano.eventos.init();
    </script>
}