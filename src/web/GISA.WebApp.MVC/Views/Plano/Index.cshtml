@{
    ViewData["Title"] = "Planos";
    Layout = "_LayoutPrivate";
}

<!-- Título Page -->
<div class="header title-page" id="header-management">
    <h3 class="text-title-page">Gestão de Planos</h3>
</div>

<!-- Informações sobre ações da página -->
<div class="row pt-75">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb text-breadcrumb">
                <li class="breadcrumb-item"><a asp-action="Apresentacao" asp-controller="Home">Início</a></li>
                <li class="breadcrumb-item active" aria-current="page"> / Plano</li>
            </ol>
        </nav>
    </div>
</div>

<div class="row pt-40">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="card card-config">
            <div class="card-body">
                <span class="d-flex justify-content-start"><i class='bx bx-info-circle nav_icon'></i> Aqui você pode incluir novos planos ou voltar a página inicial</span>
                <div class="d-flex justify-content-end">
                    <a class="btn btn-primary" asp-action="Registrar">Novo Plano</a>
                    <a class="btn btn-light ml-10" asp-action="Apresentacao" asp-controller="Home">Voltar</a>
                </div>
            </div>
        </div>
    </div>
</div>

<h3 class="text-title-info pt-40">Planos cadastrados</h3>

<div class="row">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <!-- Componente - DataTable -->
        <div id="listaPlano" class="col-xs-12"></div>
    </div>
</div>

@section Scripts {
    <script>
        var plano = {}

        plano.eventos = {

            init: () => {

                plano.template = {
                    tabela: `<table id="example" class="table table-striped table-bordered" style="width:100%;">
                                                    <thead>
                                                        <tr>
                                                            <th>Nome</th>
                                                            <th>Plano</th>
                                                            <th>Descrição</th>
                                                            <th>Valor</th>
                                                            <th>Status</th>
                                                            <th>Opções</th>
                                                        </tr>
                                                    </thead>
                                                </table>`
                }

                $('#listaPlano').html('');
                $('#listaPlano').append(plano.template.tabela);

                plano.metodos.obterPlanos();
            }

        }

        plano.metodos = {

            obterPlanos: () => {

                app.metodos.get('/plano/todos',
                    (response) => {
                        var planos = [];

                        response.forEach(function (item, index, arr) {
                            var status = (item.ativo == true)
                                ? "<td><div style='text-align: center;'><span class='badge bg-success'>Ativo</span></div></td>"
                                : "<td><div style='text-align: center;'><span class='badge bg-danger'>Inativo</span></div></td>"

                            var tipoPlano = (item.tipoPlanoEnum == 0) ? "Enfermaria" : (item.tipoPlanoEnum == 1) ? "Apartamento" : (item.tipoPlanoEnum == 2) ? "VIP" : "N/A";

                            var dado = {
                                id: item.id,
                                nome: item.nome,
                                descricao: item.descricao,
                                tipoPlano: tipoPlano,
                                valor: item.valor.toLocaleString('pt-br', { minimumFractionDigits: 2 }),
                                status: status,
                                acao: `<div class="btn-group">
                                            <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">Ação</button>
                                            <ul class="dropdown-menu">
                                                <li><a class="dropdown-item" data-bs-toggle="tooltip" data-bs-placement="top" title="Editar" onclick="EditarPlano('${item.id}');">Editar</a>
                                            </ul>
                                        </div>`
                            }

                            planos.push(dado);
                        });

                        plano.metodos.carregarTabela(planos);
                    },
                    (xhr, ajaxOptions, error) => {
                        console.log('xhr', xhr);
                        console.log('ajaxOptions', ajaxOptions);
                        console.log('error', error);
                    }

                )

            },

            carregarTabela: (planos) => {

                $('#example').DataTable({
                    processing: true,
                    data: planos,
                    columns: [
                        { data: "nome" },
                        { data: "descricao" },
                        { data: "tipoPlano" },
                        { data: "valor" },
                        { data: "status" },
                        { data: "acao" }
                    ],
                    language: {
                        url: '//cdn.datatables.net/plug-ins/1.10.20/i18n/Portuguese-Brasil.json',
                        processing: '<i class="fa fa-spinner fa-spin" style="font-size:24px;color:rgb(75, 183, 245);"></i>'
                    }
                });
            }

        }

        plano.eventos.init();
    </script>
}
