# Nome da ação (action)
name: Build

# O fluxo (workflow) será disparado em um push ou pull request para
# a ramificação main e develop, quando os arquivos C# ou de projeto foram alterados
on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main, develop ]
    paths-ignore:
    - 'README.md'

# Criando uma variável de ambiente chamada DOTNET_VERSION e defindo a versão como "6.0.x"
env:
  DOTNET_VERSION: '6.0.x' # A versão do .NET SDK

# Definindo trabalho (job) chamado "build-and-test"
jobs:
  build-and-test:
  
    # Quando o fluxo de trabalho é executado, o job será executado três vezes, uma para cada "os" definido
    name: build-and-test-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    # Cada execução de trabalho contém essas etapas
    steps:
   
    - uses: actions/checkout@v2
    - name: Setup .NET
    
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore
      
    - name: Test
      run: dotnet test --no-build --no-restore --verbosity normal
